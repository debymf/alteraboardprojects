--altmult_add ADDNSUB_MULTIPLIER_REGISTER1="CLOCK0" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEDICATED_MULTIPLIER_CIRCUITRY="YES" DEVICE_FAMILY="Cyclone II" DSP_BLOCK_BALANCING="Auto" INPUT_ACLR_A0="ACLR0" INPUT_ACLR_B0="ACLR0" INPUT_REGISTER_A0="CLOCK0" INPUT_REGISTER_B0="CLOCK0" INPUT_SOURCE_A0="DATAA" INPUT_SOURCE_B0="DATAB" MULTIPLIER1_DIRECTION="ADD" MULTIPLIER_REGISTER0="UNREGISTERED" NUMBER_OF_MULTIPLIERS=1 OUTPUT_ACLR="ACLR1" OUTPUT_REGISTER="CLOCK1" SIGNED_ACLR_A="ACLR0" SIGNED_ACLR_B="ACLR0" SIGNED_PIPELINE_REGISTER_A="UNREGISTERED" SIGNED_PIPELINE_REGISTER_B="UNREGISTERED" SIGNED_REGISTER_A="CLOCK0" SIGNED_REGISTER_B="CLOCK0" WIDTH_A=32 WIDTH_B=32 WIDTH_RESULT=64 aclr0 aclr1 clock0 clock1 dataa datab result signa signb CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 9.1 cbx_alt_ded_mult_y 2009:10:21:21:22:16:SJ cbx_altmult_add 2009:10:21:21:22:16:SJ cbx_cycloneii 2009:10:21:21:22:16:SJ cbx_lpm_add_sub 2009:10:21:21:22:16:SJ cbx_lpm_mult 2009:10:21:21:22:16:SJ cbx_mgl 2009:10:21:21:37:49:SJ cbx_padd 2009:10:21:21:22:16:SJ cbx_parallel_add 2009:10:21:21:22:16:SJ cbx_stratix 2009:10:21:21:22:16:SJ cbx_stratixii 2009:10:21:21:22:16:SJ cbx_util_mgl 2009:10:21:21:22:16:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION ded_mult_kuh1 (aclr[3..0], clock[3..0], dataa[31..0], datab[31..0], ena[3..0], signa, signb)
RETURNS ( result[63..0]);

--synthesis_resources = dsp_9bit 8 lut 106 reg 66 
SUBDESIGN mult_add_ml72
( 
	aclr0	:	input;
	aclr1	:	input;
	clock0	:	input;
	clock1	:	input;
	dataa[31..0]	:	input;
	datab[31..0]	:	input;
	result[63..0]	:	output;
	signa	:	input;
	signb	:	input;
) 
VARIABLE 
	ded_mult1 : ded_mult_kuh1;
	dffe2a[63..0] : dffe;
	dataa_bus[31..0]	: WIRE;
	datab_bus[31..0]	: WIRE;
	ena0	: NODE;
	ena1	: NODE;
	pre_result[63..0]	: WIRE;

BEGIN 
	ded_mult1.aclr[] = ( B"000", aclr0);
	ded_mult1.clock[] = ( B"111", clock0);
	ded_mult1.dataa[] = ( dataa_bus[31..0]);
	ded_mult1.datab[] = ( datab_bus[31..0]);
	ded_mult1.ena[] = ( B"111", ena0);
	ded_mult1.signa = signa;
	ded_mult1.signb = signb;
	dffe2a[].clk = clock1;
	dffe2a[].clrn = (! aclr1);
	dffe2a[].d = pre_result[];
	dffe2a[].ena = ena1;
	dataa_bus[] = ( dataa[31..0]);
	datab_bus[] = ( datab[31..0]);
	ena0 = VCC;
	ena1 = VCC;
	pre_result[63..0] = ded_mult1.result[63..0];
	result[63..0] = dffe2a[63..0].q;
END;
--VALID FILE
